//layout mixins - start
@import 'variables';

@mixin mkdTableLayout() {
	position: relative;
	display: table;
	table-layout: fixed;
	height: 100%;
	width: 100%;
}

@mixin mkdTableCellLayout() {
	position: relative;
	display: table-cell;
	height: 100%;
	width: 100%;
	vertical-align: middle;
	text-align: center;
}

@mixin mkdTypographyLayout() {
	color: inherit;
	font-family: inherit;
	font-size: inherit;
	font-weight: inherit;
	font-style: inherit;
	line-height: inherit;
	letter-spacing: inherit;
	text-transform: inherit;
}

//layout mixins - end

//transition mixins - start

@mixin mkdTransition($transition-param...) {
	-webkit-transition: $transition-param;
	-moz-transition: $transition-param;
	transition: $transition-param;
}

@mixin mkdTransform($transform-param...) {
	-webkit-transform: $transform-param;
	-moz-transform: $transform-param;
	transform: $transform-param;
}

@mixin mkdAnimation($animation-param...) {
	-webkit-animation: $animation-param;
	-moz-animation: $animation-param;
	animation: $animation-param;
}

@mixin mkdTransformOrigin($animation-param...) {
	-webkit-transform-origin: $animation-param;
	-moz-transform-origin: $animation-param;
	transform-origin: $animation-param;
}

@mixin mkdBoxShadow($shadow-property...) {
	-webkit-box-shadow: $shadow-property;
	-moz-box-shadow: $shadow-property;
	box-shadow: $shadow-property;
}

@mixin mkdBorderRadius($border-radius...) {
	-webkit-border-radius: $border-radius;
	-moz-border-radius: $border-radius;
	border-radius: $border-radius;
}

@mixin mkdGradient($gradient...) {
	background: -webkit-linear-gradient($gradient);
	background: -o-linear-gradient($gradient);
	background: -moz-linear-gradient($gradient);
	background: linear-gradient($gradient);
}

@mixin mkdBoxSizing($box-sizing) {
	-webkit-box-sizing: $box-sizing;
	-moz-box-sizing: $box-sizing;
	box-sizing: $box-sizing;
}

@mixin mkdTransitionTransform($transition-time, $transition-function) {
	-webkit-transition: -webkit-transform $transition-time $transition-function;
	transition: transform $transition-time $transition-function;
}

@mixin mkdTransitionDelay($transition-delay...) {
	-webkit-transition-delay: $transition-delay;
	-moz-transition-delay: $transition-delay;
	transition-delay: $transition-delay;
}

@mixin mkdBackfaceVisibility($visibility) {
	-webkit-backface-visibility: $visibility;
	backface-visibility: $visibility;
}

@mixin mkdClearfix() {
	&:before,
	&:after {
		content: " "; /* 1 */
		display: table; /* 2 */
	}

	&:after {
		clear: both;
	}

	& {
		*zoom: 1;
	}
}

//transition mixins - end

//vertical menu
@mixin vertical-menu-laptop-wide-landscape {
    @media only screen and (min-width: map-get($breakpoints, vertical-menu-laptop-landscape)) and (max-width: map-get($breakpoints, vertical-menu-laptop-wide-landscape)) {
        @content;
    }
}

@mixin vertical-menu-laptop-landscape {
    @media only screen and (min-width: map-get($breakpoints, vertical-menu-ipad-landscape)) and (max-width: map-get($breakpoints, vertical-menu-laptop-landscape)) {
        @content;
    }
}

@mixin vertical-menu-small-laptop-landscape {
    @media only screen and (min-width: map-get($breakpoints, ipad-landscape)) and (max-width: map-get($breakpoints, vertical-menu-ipad-landscape)) {
        @content;
    }
}

@mixin vertical-menu-ipad-landscape {
    @media only screen and (max-width: map-get($breakpoints, ipad-landscape)) {
        @content;
    }
}

//media query mixins - start
@mixin large-laptop {
	@media only screen and (max-width: map-get($breakpoints, large-laptop)) {
		@content;
	}
}

@mixin mac {
    @media only screen and (max-width: map-get($breakpoints, mac)) {
        @content;
    }
}

@mixin laptop-landscape {
	@media only screen and (max-width: map-get($breakpoints, laptop-landscape)) {
		@content;
	}
}

@mixin ipad-landscape {
	@media only screen and (max-width: map-get($breakpoints, ipad-landscape)) {
		@content;
	}
}

@mixin ipad-landscape-min {
	@media only screen and (min-width: map-get($breakpoints, ipad-landscape)) {
		@content;
	}
}

@mixin ipad-portrait {
	@media only screen and (max-width: map-get($breakpoints, ipad-portrait)) {
		@content;
	}
}

@mixin phone-landscape {
	@media only screen and (max-width: map-get($breakpoints, phone-landscape)) {
		@content;
	}
}

@mixin phone-portrait {
	@media only screen and (max-width: map-get($breakpoints, phone-portrait)) {
		@content;
	}
}

@mixin smaller-phone-portrait {
	@media only screen and (max-width: map-get($breakpoints, smaller-phone-portrait)) {
		@content;
	}
}

//media query mixins - end

//animation mixin - start

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content
	}
;
	@keyframes #{$name} {
		@content
	}
;
}

@mixin animation($name, $duration, $repeat, $timing, $delay) {
	-webkit-animation-name: $name;
	-webkit-animation-duration: $duration;
	-webkit-animation-iteration-count: $repeat;
	-webkit-animation-timing-function: $timing;
	-webkit-animation-delay: $delay;
	-webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

	animation-name: $name;
	animation-duration: $duration;
	animation-iteration-count: $repeat;
	animation-timing-function: $timing;
	animation-delay: $delay;
	animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

@mixin mkdRelativeHolderLayout() {
	position: relative;
	display: inline-block;
	width: 100%;
	vertical-align: middle;
}

//animation mixin - end

@mixin inputStyle($use-background-color: true, $use-margin: true) {
	display: inline-block;
    vertical-align: middle;
    width: 100%;
	padding: 23px 25px;
	border: 1px solid #ebebeb;
	outline: 0;
	font-family: $default-font-family;
	font-size: 16px;
	@include mkdBoxSizing(border-box);
	-webkit-appearance: none;
	-moz-appearance: none;

	@if($use-background-color) {
		background-color: #fff;
	}

	@if($use-margin) {
		margin-bottom: 12px;
	}

	@include mkdTransition(border-color 0.2s ease-out);

	&:focus {
		border: 1px solid #ddd;
	}

	resize: none;
}